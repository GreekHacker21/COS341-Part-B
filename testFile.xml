<?xml version="1.0" encoding="UTF-8" standalone="no"?><SPLProgr><ProcDefs><PD>proc<userDefinedName>maint</userDefinedName>{<ProcDefs><PD>proc<userDefinedName>inner1proc</userDefinedName>{return;}</PD>,</ProcDefs>return;}</PD>,</ProcDefs><ProcDefs><PD>proc<userDefinedName>inner2proc</userDefinedName>{<ProcDefs><PD>proc<userDefinedName>innerinner</userDefinedName>{<Algorithm><Instr><PCall>call<userDefinedName>inner1proc</userDefinedName></PCall></Instr>;</Algorithm>return;}</PD>,</ProcDefs><Algorithm><Instr><PCall>call<userDefinedName>innerinner</userDefinedName></PCall></Instr>;</Algorithm><Algorithm><Instr><Branch>if(<Expr><Const>"SS"</Const></Expr>)then{<Algorithm><Instr><Branch>if(<Expr><Const>34</Const></Expr>)then{<Algorithm><Instr><Branch>if(<Expr><Const>true</Const></Expr>)then{<Algorithm><Instr><Loop>do{<Algorithm><Instr><PCall>call<userDefinedName>inner1proc</userDefinedName></PCall></Instr>;</Algorithm>}until(<Expr><Const>false</Const></Expr>)</Loop></Instr>;</Algorithm>}</Branch></Instr>;</Algorithm>}<Alternat>else{<Algorithm><Instr><Branch>if(<Expr><Const>false</Const></Expr>)then{}</Branch></Instr>;</Algorithm>}</Alternat></Branch></Instr>;</Algorithm>}</Branch></Instr>;</Algorithm><Algorithm><Instr><Loop>while(<Expr><Var><userDefinedName>xx</userDefinedName></Var></Expr>)do{<Algorithm><Instr><Assign><LHS><Var><userDefinedName>ud</userDefinedName></Var></LHS>:=<Expr><Field><userDefinedName>hi</userDefinedName>[<Const>10</Const>]</Field></Expr></Assign></Instr>;</Algorithm>}</Loop></Instr>;</Algorithm>return;}</PD>,</ProcDefs>main{<Algorithm><Instr><Assign><LHS><Var><userDefinedName>we</userDefinedName></Var></LHS>:=<Expr><Var><userDefinedName>we</userDefinedName></Var></Expr></Assign></Instr>;</Algorithm><Algorithm><Instr><Assign><LHS><Var><userDefinedName>we</userDefinedName></Var></LHS>:=<Expr><Var><userDefinedName>we2self</userDefinedName></Var></Expr></Assign></Instr>;</Algorithm><Algorithm><Instr><Branch>if(<Expr><UnOp>input(<Var><userDefinedName>ef</userDefinedName></Var>)</UnOp></Expr>)then{<Algorithm><Instr><Assign><LHS>output</LHS>:=<Expr><Const>"PRINT"</Const></Expr></Assign></Instr>;</Algorithm>}</Branch></Instr>;</Algorithm><Algorithm><Instr><Branch>if(<Expr><UnOp>not(<Expr><Const>false</Const></Expr>)</UnOp></Expr>)then{<Algorithm><Instr><Loop>do{<Algorithm><Instr><Assign><LHS><Var><userDefinedName>re</userDefinedName></Var></LHS>:=<Expr><BinOp>larger(<Expr><Const>23</Const></Expr>,<Expr><Const>true</Const></Expr>)</BinOp></Expr></Assign></Instr>;</Algorithm>}until(<Expr><BinOp>mult(<Expr><Const>false</Const></Expr>,<Expr><Const>true</Const></Expr>)</BinOp></Expr>)</Loop></Instr>;</Algorithm>}<Alternat>else{<Algorithm><Instr><Assign><LHS>output</LHS>:=<Expr><BinOp>or(<Expr><Const>"1"</Const></Expr>,<Expr><Const>"0"</Const></Expr>)</BinOp></Expr></Assign></Instr>;</Algorithm>}</Alternat></Branch></Instr>;</Algorithm>halt;<VarDecl><Dec><TYP>num</TYP><Var><userDefinedName>hello</userDefinedName></Var></Dec>;</VarDecl><VarDecl><Dec><TYP>bool</TYP><Var><userDefinedName>okay</userDefinedName></Var></Dec>;</VarDecl>}</SPLProgr>